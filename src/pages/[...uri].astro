---
import BasicLayout from '../layouts/BasicLayout.astro';
import PageTemplate from '../templates/PageTemplate.astro';
import PostSingleTemplate from '../templates/PostSingleTemplate.astro';
import CategoryTemplate from '../templates/CategoryTemplate.astro';
import { getAllUris, getNodeByURI } from "../utils/getPosts.ts";
import type { NodeByUri } from "../types.ts";

const uri = `/${Astro.params.uri}/`;
const data = await getNodeByURI(uri);
const node: NodeByUri = data.nodeByUri;

function resolveTemplate(node: NodeByUri) {
  let template;
  switch (node.__typename) {
    case 'Page':
      template = PageTemplate;
      break;
    case 'Post':
      template = PostSingleTemplate;
      break;
    case 'Category':
      template = CategoryTemplate;
      break;
    default:
      template = PageTemplate;
  }
  return template;
}

const Template = resolveTemplate(node);

export async function getStaticPaths() {
  return await getAllUris();
}
---

<BasicLayout title={node.seo?.title || node.title} description={node.seo?.metaDesc}>
  <Template node={node} />
</BasicLayout>
